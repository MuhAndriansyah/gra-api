services:
  backend:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/libraries?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
  postgres:
    image: postgres:14.13-alpine
    restart: always
    environment:
      - POSTGRES_USER=andre-dev
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=library_db
    ports:
      - 5433:5432
    expose:
      - 5433
    volumes:
      - db:/var/lib/postgresql/data
      - .database/init.sql:/docker-entrypoint-initdb.d/database.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "libraries"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - learn_go
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./scripts/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=5m"
      - "--storage.tsdb.retention.size=10GB"
  grafana:
    image: grafana:12.0.0
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUSE_ENABLED=true
      - GF_AUTH_ANNONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_ANNONYMOUS_ORG_ID=1
    volumes:
      - ./scripts/grafana/provisioning:/etc/grafana/provisioning
      - ./scripts/grafana/dashboards:/etc/grafana/demo-dashboards
      - grafana-storage:/var/lib/grafana
  redis:
    image: redis:7.4.1-alpine3.20
    ports:
      - 6380:6379
    expose:
      - 6380
volumes:
    db:
    prometheus-storage:
networks:
    learn_go: